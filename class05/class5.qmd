---
title: "Class5 Data Visualization with ggplot2"
author: "Yufei (PID: A16222438)"
format: pdf
---

## Using ggplot

The ggplot package needs to be installed for the first time of use by `install.packages("ggplot2")` function.

```{r}
#`head()` gives the first 6 items in an item
head (cars)
```
ggplot package needs to be loaded in order to use any functions within it, by `library()` function.
```{r}
library(ggplot2)
ggplot()
```
### Creating graph with ggplot

All ggplot figures have three components: 
  data (what we want to plot) +
  aes (how we map data to the plot, e.g. x and y axes) +
  geom (how we want to represent the data, e.g. points, lines, columns...)
```{r}
ggplot(cars)+
  aes(x = speed, y = dist)+
  geom_point()
```

***Note:***
ggplot is not the only graphing system in R. e.g. "base R" graphics
```{r}
plot(cars$speed, cars$dist)
```

### Further finshing a plot
Label the graph by `labs()` function;
Add a trend line by `geom_smooth()` function;
Change plot theme to black-and-white by `theme_bw()` function
```{r}
ggplot(cars)+
  aes(x = speed, y = dist)+
  geom_point() +
#label graph components
  labs(title = "Speed and Stopping Distances of Cars",
       x = "Speed (MPH)",
       y = "Stopping Distance (ft)",
       subtitle = "Positive correlation between speed and stopping distance",
       caption = "Dataset: 'cars'") +
#lm = linear model; se = shaded standard error region
  geom_smooth(method = "lm", se=FALSE) +
#bw = black and white theme
  theme_bw()
```

### Adding more plot aesthetics

Importing a data set on antiviral drug
```{r}
url <- "https://bioboot.github.io/bimm143_S20/class-material/up_down_expression.txt"
genes <- read.delim(url)

head(genes)
nrow(genes)
colnames(genes)
ncol(genes)

table(genes$State)
round(table(genes$State)/nrow(genes)*100, 2)
```
### Making basic scatter plot

```{r}
ggplot(genes) + 
    aes(x=Condition1, y=Condition2) +
    geom_point()
```
Mapping color to State column
```{r}
p <- ggplot(genes) + 
    aes(x=Condition1, y=Condition2, col=State) +
    geom_point()
p
```
Finishing up graph by changing color and labelling
```{r}
p + 
# Assign color to columns
  scale_colour_manual( values=c("blue","gray","red") )+
  labs(title = "Gene Expression Changes Upon Drug Treatment",
       x = "Control (no drug)",
       y = "Drug Treatment")
```

## Optional Extensions
```{r}
# Obtain gapminder package online
url <- "https://raw.githubusercontent.com/jennybc/gapminder/master/inst/extdata/gapminder.tsv"

gapminder <- read.delim(url)

#alternative method: >install.packages("gapminder") >library(gapminder)

#Install & use dplyr package >install.packages("dplyr")
library(dplyr)

#take gapmider data frame and filter to contain only the rows with a year value of 2007
gapminder_2007 <- gapminder %>% filter(year==2007)
```
  
Creating plot of gapminder_2007 dataset
```{r}
ggplot(gapminder_2007) +
  aes(x=gdpPercap, y=lifeExp) +
  #change point transparency
  geom_point(alpha = 0.4)
```

### Adding more varables to aes()

Coloring the plot by categorical values
```{r}
ggplot(gapminder_2007) +
  aes(x=gdpPercap, y=lifeExp, color=continent, size=pop) +
  geom_point(alpha=0.5)
```

Coloring the plot by numerical value
```{r}
ggplot(gapminder_2007) + 
  aes(x = gdpPercap, y = lifeExp, color = pop) +
  geom_point(alpha=0.8)
```

Adjusting point size
```{r}
ggplot(gapminder_2007) + 
  geom_point(aes(x = gdpPercap, y = lifeExp,
                 size = pop), alpha=0.5) + 
  scale_size_area(max_size = 10)
```

```{r}
gapminder_1957 <- gapminder %>% filter(year==1957)

ggplot(gapminder_1957) + 
  aes(x = gdpPercap, y = lifeExp, color=continent,
                 size = pop) +
  geom_point(alpha=0.7) + 
  scale_size_area(max_size = 15) 
```
```{r}
gapminder_1957 <- gapminder %>% filter(year==1957 | year==2007)

ggplot(gapminder_1957) + 
  aes(x = gdpPercap, y = lifeExp, color=continent,
                 size = pop) +
  geom_point(alpha=0.7) + 
  scale_size_area(max_size = 10) +
  facet_wrap(~year)
```

## Making bar graphs

```{r}
## sorting for top 5 countries with highest population size
gapminder_top5 <- gapminder %>% 
  filter(year==2007) %>% 
  arrange(desc(pop)) %>% 
  top_n(5, pop)

gapminder_top5
```
### Creating simple bar chart
```{r}
ggplot(gapminder_top5) + 
  geom_col(aes(x = country, y = pop))
```

### Adding aesthetics
Color by categorical variable
```{r}
ggplot(gapminder_top5) + 
  geom_col(aes(x = country, y = pop, fill = continent))
```
```{r}
ggplot(gapminder_top5) + 
  geom_col(aes(x = country, y = pop, fill = country))
```


Color by numeric variable
```{r}
ggplot(gapminder_top5) + 
  geom_col(aes(x = country, y = pop, fill = lifeExp))
```

```{r}
ggplot(gapminder_top5) +
  aes(x=country, y=pop, fill=gdpPercap) +
  geom_col()
```

### Flipping bar charts

inbuilt dataset USArrests
```{r}
head(USArrests)
```

Plot horizontal bars
```{r}
USArrests$State <- rownames(USArrests)
ggplot(USArrests) +
  aes(x=reorder(State,Murder), y=Murder) +
  geom_col() +
  coord_flip()
```

Adding aesthetics
```{r}
ggplot(USArrests) +
  aes(x=reorder(State,Murder), y=Murder) +
  geom_point() +
# Make the graph less crowded
  geom_segment(aes(x=State, 
                   xend=State, 
                   y=0, 
                   yend=Murder), color="blue") +
# Flip direction
  coord_flip()
```

## Animation
```{r}
# install extension packages >install.packages("gifski") >install.packages("gganimate")
library(gapminder)
library(gganimate)

# CODES FOR ANIMATION HIDDEN TO REDUCE PDF REPORT SIZE
# Setup nice regular ggplot of the gapminder data
#ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, colour = country)) +
  #geom_point(alpha = 0.7, show.legend = FALSE) +
  #scale_colour_manual(values = country_colors) +
  #scale_size(range = c(2, 12)) +
  #scale_x_log10() +
  # Facet by continent
  #facet_wrap(~continent) +
  # Here comes the gganimate specific bits
  #labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +
  #transition_time(year) +
  #shadow_wake(wake_length = 0.1, alpha = FALSE)
```

## Combining Plots
```{r}
# Install patchwork package >install.packages(patchwork)
library(patchwork)
# Setup some example plots 
p1 <- ggplot(mtcars) + geom_point(aes(mpg, disp))
p2 <- ggplot(mtcars) + geom_boxplot(aes(gear, disp, group = gear))
p3 <- ggplot(mtcars) + geom_smooth(aes(disp, qsec))
p4 <- ggplot(mtcars) + geom_bar(aes(carb))

# Use patchwork to combine them here:
(p1 | p2 | p3) / p4

# Setup some example plots 
p1 <- ggplot(mtcars) + geom_point(aes(mpg, disp))
p2 <- ggplot(mtcars) + geom_boxplot(aes(gear, disp, group = gear))
p3 <- ggplot(mtcars) + geom_smooth(aes(disp, qsec))
p4 <- ggplot(mtcars) + geom_bar(aes(carb))

# Use patchwork to combine them here:
(p1 | p2 | p3) /
      p4
```

## Reporting R system Setup
```{r}
sessionInfo()
```

